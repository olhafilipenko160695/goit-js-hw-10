{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst button = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysRef = document.querySelector('[data-days]');\nconst hoursRef = document.querySelector('[data-hours]');\nconst minutesRef = document.querySelector('[data-minutes]');\nconst secondsRef = document.querySelector('[data-seconds]');\n\nlet newUserDate = null;\nbutton.disabled = true;\nbutton.addEventListener('click', onStartTimer);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= Date.now()) {\n      iziToast.warning({\n        message: 'Please choose a date in the future',\n      });\n      button.disabled = true;\n    } else {\n      button.disabled = false;\n      newUserDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr(input, options);\n\nfunction onStartTimer() {\n  input.disabled = true;\n  button.disabled = true;\n  const intervalId = setInterval(() => {\n    const difTime = newUserDate - Date.now();\n\n    const { days, hours, minutes, seconds } = convertMs(difTime);\n\n    daysRef.textContent = addLeadingZero(days);\n    hoursRef.textContent = addLeadingZero(hours);\n    minutesRef.textContent = addLeadingZero(minutes);\n    secondsRef.textContent = addLeadingZero(seconds);\n\n    if (difTime < 1000) {\n      clearInterval(intervalId);\n    }\n  }, 1000);\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, 0);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["button","input","daysRef","hoursRef","minutesRef","secondsRef","newUserDate","onStartTimer","options","selectedDates","iziToast","flatpickr","intervalId","difTime","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"sGASA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EAE1D,IAAIC,EAAc,KAClBN,EAAO,SAAW,GAClBA,EAAO,iBAAiB,QAASO,CAAY,EAE7C,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,IAAM,KAAK,IAAG,GAC9BC,EAAS,QAAQ,CACf,QAAS,oCACjB,CAAO,EACDV,EAAO,SAAW,KAElBA,EAAO,SAAW,GAClBM,EAAcG,EAAc,GAE/B,CACH,EAEAE,EAAUV,EAAOO,CAAO,EAExB,SAASD,GAAe,CACtBN,EAAM,SAAW,GACjBD,EAAO,SAAW,GAClB,MAAMY,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAUP,EAAc,KAAK,IAAG,EAEhC,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAO,EAE3DX,EAAQ,YAAciB,EAAeL,CAAI,EACzCX,EAAS,YAAcgB,EAAeJ,CAAK,EAC3CX,EAAW,YAAce,EAAeH,CAAO,EAC/CX,EAAW,YAAcc,EAAeF,CAAO,EAE3CJ,EAAU,KACZ,cAAcD,CAAU,CAE3B,EAAE,GAAI,CACT,CAEA,SAASO,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,CAAC,CACvC,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}